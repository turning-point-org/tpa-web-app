# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - tpa-web-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Delete old artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            for (const artifact of artifacts.data.artifacts) {
              console.log(`Deleting artifact ${artifact.name} with ID ${artifact.id}`);
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id
              });
            }

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
        env:
          NEXT_TELEMETRY_DISABLED: 1
          ESLINT_SKIP: true
          SKIP_TYPESCRIPT_CHECK: true
          # Azure OpenAI
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_OPENAI_DEPLOYMENT_NAME: ${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME || 'text-embedding-ada-002' }}
          AZURE_OPENAI_CHAT_DEPLOYMENT_NAME: ${{ secrets.AZURE_OPENAI_CHAT_DEPLOYMENT_NAME || 'gpt-35-turbo' }}
          # Azure Cosmos DB
          COSMOS_DB_ENDPOINT: ${{ secrets.COSMOS_DB_ENDPOINT }}
          COSMOS_DB_KEY: ${{ secrets.COSMOS_DB_KEY }}
          COSMOS_DB_DATABASE: ${{ secrets.COSMOS_DB_DATABASE }}
          COSMOS_DB_CONTAINER: ${{ secrets.COSMOS_DB_CONTAINER }}
          # Azure Cosmos DB for RAG
          COSMOS_DB_RAG_ENDPOINT: ${{ secrets.COSMOS_DB_RAG_ENDPOINT }}
          COSMOS_DB_RAG_KEY: ${{ secrets.COSMOS_DB_RAG_KEY }}
          COSMOS_DB_RAG_DATABASE: ${{ secrets.COSMOS_DB_RAG_DATABASE || 'db-tpa-dev' }}
          COSMOS_DB_RAG_CONTAINER: ${{ secrets.COSMOS_DB_RAG_CONTAINER || 'container-tpa-rag-dev' }}
          # Azure Blob Storage
          AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
          AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME || 'documents' }}
          # Azure Speech
          AZURE_SPEECH_KEY: ${{ secrets.AZURE_SPEECH_KEY }}
          AZURE_SPEECH_REGION: ${{ secrets.AZURE_SPEECH_REGION }}
          # Other
          BASE_URL: ${{ secrets.BASE_URL || 'https://tpa-web-app.azurewebsites.net' }}

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2DED4693570B42679FD0B07066FE7936 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_302EFFD7C65544C6BF9A48DAA2A87600 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4D3A6A8998654E8199C9256EE6383360 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'tpa-web-app'
          slot-name: 'Production'
          package: .
          